/*
 * Copyright (C) 2003-2015 FreeIPMI Core Team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef IPMI_SENSOR_AND_EVENT_CODE_TABLES_OEM_INTEL_S2600BPB_SPEC_H
#define IPMI_SENSOR_AND_EVENT_CODE_TABLES_OEM_INTEL_S2600BPB_SPEC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <freeipmi/spec/oem/intel/ipmi-sensor-and-event-code-tables-oem-intel-common-spec.h>

/*
 * S2600BPB
 */

/* Event Reading Type Code = IPMI_EVENT_READING_TYPE_CODE_OEM_INTEL_NVME_CRITICAL_WARNING_SENSOR
 * Sensor Type = IPMI_SENSOR_TYPE_DISK_DRIVE
 */
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA1_DISK_DRIVE_BITMASK 0x04
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA1_DISK_DRIVE_SHIFT   0

#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA2_DISK_DRIVE_SPARE_SPACE_BELOW_THRESHOLD          0x01
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA2_DISK_DRIVE_TEMPERATURE_ABOVE_OR_BELOW_THRESHOLD 0x02
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA2_DISK_DRIVE_NVM_RELIABILITY_DEGRADED             0x04
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA2_DISK_DRIVE_IN_READ_ONLY_MODE                    0x08
#define IPMI_OEM_INTEL_S2600BPB_NVME_CRITICAL_WARNING_EVENT_DATA2_DISK_DRIVE_VOLATILE_BACKUP_SERVICE_FAILED       0x10

/* Sensor Type = IPMI_SENSOR_TYPE_SYSTEM_EVENT */
/* achu: this is not documented in IPMI spec, so assuming Intel OEM
 * extension?  Or possibly extension not yet released by Intel? */
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_IMAGE_IS_UPLOADED 0x07
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_IMAGE_IS_LOST     0x08

#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA2_BIOS_CONFIGURATION_TABLE  0x00
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA2_BIOS_CONFIGURATION_CHANGE 0x01
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA2_BIOS_IMAGE                0x02
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA2_ME_IMAGE                  0x03
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA2_FD_IMAGE                  0x04

#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA3_FIRMWARE_UPDATE           0x00
#define IPMI_SENSOR_TYPE_SYSTEM_EVENT_OEM_INTEL_S2600BPB_EVENT_DATA3_BIOS_CONFIGURATION        0x01

/* Sensor Type = IPMI_SENSOR_TYPE_SESSION_AUDIT
 * Offset = IPMI_SENSOR_TYPE_SESSION_AUDIT_INVALID_USERNAME_OR_PASSWORD
 *          IPMI_SENSOR_TYPE_SESSION_AUDIT_INVALID_PASSWORD_DISABLE
 */
#define IPMI_SENSOR_TYPE_SESSION_AUDIT_EVENT_DATA2_OEM_INTEL_S2600BPB_USERID_BITMASK 0x3F
#define IPMI_SENSOR_TYPE_SESSION_AUDIT_EVENT_DATA2_OEM_INTEL_S2600BPB_USERID_SHIFT   0

/* achu: Note this is different compared to other INTEL CHANNEL bitmasks */
#define IPMI_SENSOR_TYPE_SESSION_AUDIT_EVENT_DATA3_OEM_INTEL_S2600BPB_CHANNEL_BITMASK 0x0F
#define IPMI_SENSOR_TYPE_SESSION_AUDIT_EVENT_DATA3_OEM_INTEL_S2600BPB_CHANNEL_SHIFT   0

/* Event Reading Type Code = IPMI_EVENT_READING_TYPE_CODE_OEM_INTEL_S2600BPB_REMOTE_DEBUG_SENSOR
 * Sensor Type = IPMI_SENSOR_TYPE_OEM_INTEL_S2600BPB_REMOTE_DEBUG_SENSOR
 */
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_REMOTE_JTAG_CONSENT 0x00
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_REMOTE_JTAG_ENABLED 0x01
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_REMOTE_JTAG_SESSION 0x02
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_REMOTE_PECI_ENABLED 0x03
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_REMOTE_PECI_SESSION 0x04

/* Event Reading Type Code = IPMI_EVENT_READING_TYPE_CODE_OEM_INTEL_S2600BPB_SYSTEM_FIRMWARE_SECURITY_SENSOR
 * Sensor Type = IPMI_SENSOR_TYPE_OEM_INTEL_S2600BPB_SYSTEM_FIRMWARE_SECURITY
 */
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_AUTHENTICATION_FAILURE_OF_BMC_FIRMWARE_IMAGE_DURING_BOOT          0x00
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_INVALID_SECURITY_REVISION_OF_BMC_FIRMWARE_IMAGE_DURING_BOOT       0x01
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_AUTHENTICATION_FAILURE_OF_BMC_FIRMWARE_IMAGE_DURING_UPDATE        0x02
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_INVALID_SECURITY_REVISION_OF_BMC_FIRMWARE_IMAGE_DURING_UPDATE     0x03
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_AUTHENTICATION_FAILURE_OF_SIGNED_REGION_DURING_UPDATE             0x04
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_AUTHENTICATION_FAILURE_OF_SIGNED_REGION_DURING_BOOT_OR_RUNTIME    0x05
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_INVALID_SECURITY_REVISION_OF_SIGNED_REGION_DURING_UPDATE          0x06
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_INVALID_SECURITY_REVISION_OF_SIGNED_REGION_DURING_BOOT_OR_RUNTIME 0x07
/* achu: not a typo, jumps to 0x0C & 0x0D */
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_FACTORY_IMAGE_BOOTED                                              0x0C
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_SYSTEM_FIRMWARE_SECURITY_SENSOR_FACTORY_SECURITY_REVISION_DOWNGRADED                              0x0D

/*
 * String arrays for above
 */

extern const char * const ipmi_oem_intel_s2600bpb_specific_remote_debug_sensor[];
extern unsigned int ipmi_oem_intel_s2600bpb_specific_remote_debug_sensor_max_index;

extern const char * const ipmi_oem_intel_s2600bpb_specific_system_firmware_security_sensor[];
extern unsigned int ipmi_oem_intel_s2600bpb_specific_system_firmware_security_sensor_max_index;

/* achu: Document is ambiguous about if this applys to event data 2 or
 * 3, so we just say "EVENT_DATA"
 */
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_EVENT_DATA_JTAG_SESSION_STATE_BITMASK 0x01
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_EVENT_DATA_JTAG_ENABLED_BITMASK       0x02
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_EVENT_DATA_JTAG_DEBUG_CONSENT_BITMASK 0x03
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_EVENT_DATA_PECI_SESSION_STATE_BITMASK 0x04
#define IPMI_OEM_INTEL_S2600BPB_SPECIFIC_REMOTE_DEBUG_SENSOR_EVENT_DATA_PECI_ENABLED_BITMASK       0x05

#ifdef __cplusplus
}
#endif

#endif /* IPMI_SENSOR_AND_EVENT_CODE_TABLES_OEM_INTEL_S2600BPB_SPEC_H */
