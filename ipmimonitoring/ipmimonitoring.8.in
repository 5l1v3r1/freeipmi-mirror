\."#############################################################################
\."$Id: ipmimonitoring.8.in,v 1.11.4.1 2007-07-13 15:44:01 chu11 Exp $
\."#############################################################################
\."  Copyright (C) 2006 The Regents of the University of California.
\."  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
\."  Written by Albert Chu <chu11@llnl.gov>
\."  UCRL-CODE-222073
\."  
\."  This file is part of Ipmimonitoring, an IPMI sensor monitoring
\."  library.  For details, see http://www.llnl.gov/linux/.
\."
\."  Ipmimonitoring is free software; you can redistribute it and/or modify it under
\."  the terms of the GNU General Public License as published by the Free
\."  Software Foundation; either version 2 of the License, or (at your option)
\."  any later version.
\."  
\."  Ipmimonitoring is distributed in the hope that it will be useful, but WITHOUT 
\."  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
\."  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
\."  for more details.
\."  
\."  You should have received a copy of the GNU General Public License along
\."  with Ipmimonitoring; if not, write to the Free Software Foundation, Inc.,
\."  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
\."############################################################################
.TH ipmimonitoring 8 "@ISODATE@" "ipmimonitoring @PACKAGE_VERSION@" "System Commands"
.SH "NAME"
ipmimonitoring \- IPMI monitoring tool
.SH "SYNOPSIS"
.B ipmimonitoring
.I "[OPTIONS]"
.SH "DESCRIPTION"
.B ipmimonitoring
is an IPMI sensor monitoring tool that utilizes the libipmimonitoring
library to interpret sensor readings rather than just report them.
The tool will output if sensors are in Nominal, Warning, or Critical
states.  The state interpretations are determined by the configuration
file @IPMI_MONITORING_SENSOR_CONFIG_FILE_DEFAULT@.  The library and
tool are primarily used for host monitoring activities.  For more
general sensor reading use, it is recommended that users use
.B ipmi-sensors(8).

.B Ipmimonitoring
will cache the sensor data repository of the machine for later retrieval.
So the first time you run 
.B ipmimonitoring
may take longer to complete that later executions.  By default, the SDR data
is cached in
@IPMI_MONITORING_SDR_CACHE_DIR@.

.SH "OPTIONS"
.TP
.I "-D, --driver-type str"
Specify the IPMI driver type to use.  The currently available types
are "lan", "lan_2_0", "kcs", "ssif", and "openipmi".  If not specified
in-band drivers will be probed and the IPMI 1.5 protocol will be
assumed.
.TP
.I "-h, --hostname host"
Specify the remote host or hosts to connect to.  May include host
ranges. See HOSTRANGED OUTPUT below.
.TP
.I "-u, --username name"
Specify the username to use to establish communication.  If not
specified, the NULL user is assumed.
.TP
.I "-p, --password pw"
Specify the password to use to establish communication.  If not
specified, a NULL password is assumed.
.TP
.I "-l, --privilege str"
Specify the privilege type to use.  The currently available privilege
types are "user", "operator", and "admin".  If not specified, a
privilege of "admin" is assumed.  
.TP
.I "-a, --authentication-type str"
Specify the authentication mechanism to use.  The currently available
authentication mechanisms are "none", "straight_password_key", "md2",
and "md5".  If not specified, "md5" is assumed.
.TP
.I "-s, --sensors list"
Specify a list of sensors record ids to specifically monitor.  List of
sensors can be separated by spaces or commas.
.TP
.I "-g, --groups list"
Specify a list of groups to specifically monitor.  List of groups can
be separated by spaces or commas.  The available groups are:
temperature, voltage, current, fan, physical_security,
platform_security_violation_attempt, processor, power_supply,
power_unit, memory, drive_slot, system_firmware_progress,
event_logging_disabled, system_event, critical_interrupt,
module_board, slot_connector, watchdog2.
.TP
.I "-c, --cache-dir dir"
Specify an alternate directory to read and write SDR caches.
.TP
.I "-r, --regenerate-sdr-cache"
By default 
.B ipmimonitoring,
caches the sensor data repository (SDR) of a node for quicker
monitoring on subsequent executions of 
.B ipmimonitoring.
This option informs
.B ipmimonitoring 
to regenerate an SDR cache.  This is often used if the firmware for a
remote node has been changed.
.TP
.I "-q, --quiet-readings"
Do not output sensor reading values, only Nominal, Warning, or
Critical states.  This option is particularly useful if you want to
use hostranged output across a cluster and want to consolidate the
output.
.TP
.I "-B, --buffer-output"
Buffer hostranged output. Each node's standard output will output
after the node has completed its IPMI operation. When specifying this
option, data may appear to output slower to the user since the the
entire IPMI operation must complete before any data can be output.
See HOSTRANGED OUTPUT below for additional information.
.TP
.I "-C, --consolidate-output"
Consolidate hostranged output. The complete standard output from
every node specified will be consolidated so that nodes with identical
output are not output twice. A header will list those nodes with the
consolidated output. When this option is specified, no output can be
seen until the IPMI operations to all nodes has completed. If the
user breaks out of the program early, all currently consolidated
output will be dumped. See HOSTRANGED OUTPUT below for additional
information.
.TP
.I "-F, --fanout num"
Set multiple host fanout. A "sliding window" (or fanout) algorithm is
used for parallel IPMI communication so that slower nodes or timed out
nodes will not impede parallel communication. The maximum number of
threads available at the same time is limited by the fanout. The
default is 64. See HOSTRANGED OUTPUT below for additional
information.
.TP
.I "-E, --eleminate"
Eliminate hosts determined as undetected by
.B ipmidetect.
This attempts to remove the common issue of hostranged execution
timing out due to several nodes being removed from service in a large
cluster. The
.B ipmidetectd
daemon must be running on the node executing the command. See
HOSTRANGED OUTPUT below for additional information.
.TP
.I "-W, --workaround-flags str"
Specify workarounds to vendor compliance issues.  Multiple workarounds
can be specified separated by commas.  See WORKAROUNDS below list of
available workarounds.
.TP
.I "-H, --help"
Output help menu and exit.
.TP
.I "-V, --version"
Output version and exit.
.if @WITH_DEBUG@ \{
.TP
.I "-D, --debug"
Turn on debugging.
.TP
.I "-G, --debugdump"
Turn on packet dumps for debugging.
\}
.LP

.SH "HOSTRANGED OUTPUT"
The host input specified by the user can accept multiple hosts for
parallel out of band communication and output. Multiple hosts can be
input either as an explicit comma seperated lists of hosts or a range
of hostnames in the general form: prefix[n-m,l-k,...], where n < m and
l < k, etc. The later form should not be confused with regular
expression character classes (also denoted by []). For example,
foo[19] does not represent foo1 or foo9, but rather represents a
degenerate range: foo19.
.LP
This range syntax is meant only as a convenience on clusters with a
prefixNN naming convention and specification of ranges should not be
considered necessary -- the list foo1,foo9 could be specified as such,
or by the range foo[1,9].
.LP
Some examples of range usage follow:
.nf
    foo[01-05] instead of foo01,foo02,foo03,foo04,foo05
    foo[7,9-10] instead of foo7,foo9,foo10
    foo[0-3] instead of foo0,foo1,foo2,foo3
.fi
.LP
As a reminder to the reader, some shells will interpret brackets ([
and ]) for pattern matching. Depending on your shell, it may be
necessary to enclose ranged lists within quotes.
.LP
By default, standard output from each node specified will be output
with the hostname prepended to each line. Although this output is
readable in many situations, it may be difficult to read in other
situations. For example, output from multiple nodes may be mixed
together. The \fB\-B\fR and \fB\-C\fR options can be used to change
this default.
.LP
In-band IPMI Communication will be used when the host "localhost" is
specified.  This allows the user to add the localhost into the
hostranged output.

.SH "WORKAROUNDS"
With so many different vendors implementing their
own IPMI solutions, different vendors may implement their IPMI
protocols incorrectly.  The following lists the handful of
compliance issues discovered and the workarounds currently
supported.

When possible, workarounds have been implemented so they will be
transparent to the user.  However, some will require the user to
specify a workaround be used via the -W option.  The workarounds
listed below are listed in the order of their implementation.
Therefore, workarounds implemented earlier may work for other vendors.

The hardware listed below only indicates the hardware that a problem
was discovered on.  Newer versions hardware may fix the problems
indicated below.  Similar machines from vendors may or may not exhibit
the same problems.

Intel SR870BN4: BMCs would not respond to retransmissions of a Get
Session Challenge Request if a previous Get Session Challenge response
was lost.  Resolved by sending retransmitted Get Session Challenge
requests from a different source port.  Automatically handled.

Tyan S2882 with m3289 BMC: After the IPMI session is brought up,
packet responses return empty session IDs to the client.  In order to
work around this issue, the "idzero" workaround must be specified.
The option will allow empty session IDs to be accepted by the client.
This problem is apparently fixed in later firmware releases.

Dell PowerEdge 2850,SC1425: When Per-Message Authentication is
disabled, packet responses contain non-null authentication data (when
it should in fact be null).  In order to work around this issue, the
"unexpectedauth" workaround must be specified.  The option will allow
unexpected non-null authcodes to be checked as though they were
expected. This compliance bug is confirmed to be fixed on newer
firmware.

IBM eServer 325: The remote BMC will advertise that Per Message
Authentication is disabled, but actually require it for the protocol.
In order to work around this issue, the "forcepermsg" workaround must
be specified.  The option will force Per Message Authentication to be
used no matter what is advertised by the remote BMC.

Supermicro H8QME with SIMSO daughter card: The remote BMC will
advertise that Per Message Authentication is disabled, but actually
require it for the protocol. Automatically handled.

Intel SE7520AF2 with Intel Server Management Module (Professional
Edition): There are a number of Intel IPMI 2.0 bugs which can be
worked around by specifying the "intel20" workaround.  The
workarounds include padding of usernames, automatic acceptance of a
RAKP 4 response integrity check when using the integrity algorithm
MD5-128, and password truncation if the authentication algorithm is
HMAC-MD5-128.

Supermicro H8QME with SIMSO daughter card: There are several
Supermicro IPMI 2.0 bugs on early firmware revisions which can be
worked around using the "supermicro20" workaround.  These compliance
bugs are confirmed to be fixed on newer firmware.

Sun Fire 4100: There are several IPMI 2.0 bugs which can be worked
around by specifying the "sun20" workaround.  The workarounds include
handling invalid lengthed hash keys and invalid cipher suite records.

.SH "KNOWN ISSUES"
Interpretation rules have not been written for all sensors
permutations and types.  If sensor interpretation rules are needed,
please contact the author listed below.

.if @WITH_DEBUG@ \{
This version of ipmimonitoring was compiled with debugging.  When compiled
with debugging,
.B ipmimonitoring 
is insecure.  The following were intentionally
left in
.B ipmimonitoring
for debugging purposes:

.IP o 2
Command line arguments are not cleared from memory.
.IP o
Core dumps are enabled.

Before placing ipmimonitoring in a production system, it is recommended
that the program be compiled with debugging turned off.
\}
.SH FILES
@IPMI_MONITORING_SDR_CACHE_DIR@

@IPMI_MONITORING_SENSOR_CONFIG_FILE_DEFAULT@

.SH "ORIGIN"
Developed by Albert Chu <chu11@llnl.gov> on LLNL's GNU/Linux clusters.
This software is open source and distributed under the terms of the
Gnu GPL.
.SH "SEE ALSO"
ipmi-sensors(8), libipmimonitoring(3)
